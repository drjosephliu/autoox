{"ast":null,"code":"import _classCallCheck from \"/Users/Joseph/workspace/hackathons/autoox/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Joseph/workspace/hackathons/autoox/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Joseph/workspace/hackathons/autoox/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Joseph/workspace/hackathons/autoox/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Joseph/workspace/hackathons/autoox/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Joseph/workspace/hackathons/autoox/client/src/App.js\";\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport ReactHighCharts from 'react-highcharts';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.createConnection = function () {\n      _this.socket = io(_this.state.endpoint);\n\n      _this.socket.on('data', function (data) {\n        data = parseInt(data.slice(0, -1));\n\n        _this.addData(data);\n\n        var chart = _this.refs.chart.getChart();\n\n        var series = chart.series[0];\n        var shift = series.data.length > 20;\n        chart.series[0].addPoint(data, true, shift);\n      });\n    };\n\n    _this.addData = function (data) {\n      var newPulseOx = _this.state.pulseOx.concat(data);\n\n      if (_this.state.pulseOx.length > 30) {\n        newPulseOx = newPulseOx.slice(-30);\n      }\n\n      _this.setState({\n        pulseOx: newPulseOx\n      });\n    };\n\n    _this.state = {\n      endpoint: \"http://localhost:5000\",\n      pulseOx: []\n    };\n\n    _this.createConnection();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var pulseOx = this.state.pulseOx;\n      console.log(pulseOx);\n      var config = {\n        chart: {\n          type: 'spline',\n          height: '400px',\n          animation: {\n            duration: 2000,\n            easing: 'easeInBounce'\n          }\n        },\n        xAxis: {\n          categories: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n        },\n        yAxis: {\n          title: {\n            text: \"Oxygen saturation\"\n          }\n        },\n        series: [{\n          data: []\n        }],\n        plotOptions: {\n          series: {\n            animation: {\n              duration: 500\n            }\n          }\n        }\n      };\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"AutoOx\"), React.createElement(\"div\", {\n        style: {\n          border: 'solid 2px red',\n          padding: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(ReactHighCharts, {\n        config: config,\n        ref: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Current pulse oximetry readings: \", pulseOx.length === 0 ? 0 : pulseOx[pulseOx.length - 1], \"%\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Joseph/workspace/hackathons/autoox/client/src/App.js"],"names":["React","Component","io","ReactHighCharts","App","createConnection","socket","state","endpoint","on","data","parseInt","slice","addData","chart","refs","getChart","series","shift","length","addPoint","newPulseOx","pulseOx","concat","setState","console","log","config","type","height","animation","duration","easing","xAxis","categories","yAxis","title","text","plotOptions","textAlign","border","padding"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,eAAP,MAA4B,kBAA5B;;IAEMC,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;;AADY,UAWdC,gBAXc,GAWK,YAAM;AACvB,YAAKC,MAAL,GAAcJ,EAAE,CAAC,MAAKK,KAAL,CAAWC,QAAZ,CAAhB;;AAEA,YAAKF,MAAL,CAAYG,EAAZ,CAAe,MAAf,EAAuB,UAAAC,IAAI,EAAI;AAC7BA,QAAAA,IAAI,GAAGC,QAAQ,CAACD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAD,CAAf;;AACA,cAAKC,OAAL,CAAaH,IAAb;;AAEA,YAAII,KAAK,GAAG,MAAKC,IAAL,CAAUD,KAAV,CAAgBE,QAAhB,EAAZ;;AACA,YAAIC,MAAM,GAAGH,KAAK,CAACG,MAAN,CAAa,CAAb,CAAb;AACA,YAAIC,KAAK,GAAGD,MAAM,CAACP,IAAP,CAAYS,MAAZ,GAAqB,EAAjC;AAEAL,QAAAA,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgBG,QAAhB,CAAyBV,IAAzB,EAA+B,IAA/B,EAAqCQ,KAArC;AACD,OATD;AAUD,KAxBa;;AAAA,UA0BdL,OA1Bc,GA0BJ,UAAAH,IAAI,EAAI;AAChB,UAAIW,UAAU,GAAG,MAAKd,KAAL,CAAWe,OAAX,CAAmBC,MAAnB,CAA0Bb,IAA1B,CAAjB;;AAEA,UAAI,MAAKH,KAAL,CAAWe,OAAX,CAAmBH,MAAnB,GAA4B,EAAhC,EAAoC;AAClCE,QAAAA,UAAU,GAAGA,UAAU,CAACT,KAAX,CAAiB,CAAC,EAAlB,CAAb;AACD;;AAED,YAAKY,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAED;AAAX,OAAd;AACD,KAlCa;;AAGZ,UAAKd,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,uBADC;AAEXc,MAAAA,OAAO,EAAE;AAFE,KAAb;;AAKA,UAAKjB,gBAAL;;AARY;AASb;;;;6BA2BQ;AAAA,UACCiB,OADD,GACa,KAAKf,KADlB,CACCe,OADD;AAEPG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,UAAMK,MAAM,GAAG;AACbb,QAAAA,KAAK,EAAE;AACLc,UAAAA,IAAI,EAAE,QADD;AAELC,UAAAA,MAAM,EAAE,OAFH;AAGLC,UAAAA,SAAS,EAAE;AACTC,YAAAA,QAAQ,EAAE,IADD;AAETC,YAAAA,MAAM,EAAE;AAFC;AAHN,SADM;AASbC,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B;AADP,SATM;AAYbC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD;AADF,SAZM;AAiBbpB,QAAAA,MAAM,EAAE,CAAC;AACPP,UAAAA,IAAI,EAAE;AADC,SAAD,CAjBK;AAoBb4B,QAAAA,WAAW,EAAE;AACXrB,UAAAA,MAAM,EAAE;AACNa,YAAAA,SAAS,EAAE;AACTC,cAAAA,QAAQ,EAAE;AADD;AADL;AADG;AApBA,OAAf;AA6BA,aACE;AAAK,QAAA,KAAK,EAAE;AAAEQ,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,eAAV;AAA2BC,UAAAA,OAAO,EAAE;AAApC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,MAAM,EAAEd,MAAzB;AAAiC,QAAA,GAAG,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAsCL,OAAO,CAACH,MAAR,KAAmB,CAAnB,GAAuB,CAAvB,GAA2BG,OAAO,CAACA,OAAO,CAACH,MAAR,GAAe,CAAhB,CAAxE,MALF,CADF;AASD;;;;EA9EelB,S;;AAiFlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport ReactHighCharts from 'react-highcharts';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      endpoint: \"http://localhost:5000\",\n      pulseOx: []\n    };\n\n    this.createConnection();\n  }\n\n  createConnection = () => {\n    this.socket = io(this.state.endpoint);\n\n    this.socket.on('data', data => {\n      data = parseInt(data.slice(0, -1));\n      this.addData(data);\n\n      let chart = this.refs.chart.getChart();\n      let series = chart.series[0];\n      let shift = series.data.length > 20;\n\n      chart.series[0].addPoint(data, true, shift);\n    });\n  }\n\n  addData = data => {\n    let newPulseOx = this.state.pulseOx.concat(data);\n\n    if (this.state.pulseOx.length > 30) {\n      newPulseOx = newPulseOx.slice(-30);\n    }\n\n    this.setState({ pulseOx: newPulseOx });\n  }\n\n  render() {\n    const { pulseOx } = this.state;\n    console.log(pulseOx);\n    const config = {\n      chart: {\n        type: 'spline',\n        height: '400px',\n        animation: {\n          duration: 2000,\n          easing: 'easeInBounce'\n        }\n      },\n      xAxis: {\n        categories: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n      },\n      yAxis: {\n        title: {\n          text: \"Oxygen saturation\"\n        }\n      },\n      series: [{\n        data: []\n      }],\n      plotOptions: {\n        series: {\n          animation: {\n            duration: 500\n          }\n        }\n      }\n    };\n\n    return (\n      <div style={{ textAlign: 'center' }}>\n        <h1>AutoOx</h1>\n        <div style={{ border: 'solid 2px red', padding: '0px' }}>\n          <ReactHighCharts config={config} ref='chart'></ReactHighCharts>\n        </div>\n        <h2>Current pulse oximetry readings: {pulseOx.length === 0 ? 0 : pulseOx[pulseOx.length-1]}%</h2>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}