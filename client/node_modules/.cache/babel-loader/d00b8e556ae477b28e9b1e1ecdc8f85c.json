{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component, Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid/v4';\nimport isFunction from 'lodash-es/isFunction';\nimport attempt from 'lodash-es/attempt';\nimport Hidden from '../Hidden';\nimport getModifiedProps from '../../utils/getModifiedProps';\n\nvar PlotBand = function (_Component) {\n  _inherits(PlotBand, _Component);\n\n  function PlotBand(props) {\n    _classCallCheck(this, PlotBand);\n\n    var _this = _possibleConstructorReturn(this, (PlotBand.__proto__ || _Object$getPrototypeOf(PlotBand)).call(this, props));\n\n    _this.getPlotBandConfig = function () {\n      var _this$props = _this.props,\n          id = _this$props.id,\n          children = _this$props.children,\n          rest = _objectWithoutProperties(_this$props, ['id', 'children']);\n\n      if (!_this.id) {\n        _this.id = isFunction(id) ? id() : id;\n      }\n\n      return _extends({\n        id: _this.id\n      }, rest);\n    };\n\n    _this.state = {\n      rendered: false\n    };\n    return _this;\n  }\n\n  _createClass(PlotBand, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var axis = this.props.getAxis(); // Create Highcharts Plot Band on Axis\n\n      var opts = this.getPlotBandConfig();\n      axis.addPlotBand(opts);\n      this.setState({\n        rendered: true\n      });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      if (getModifiedProps(prevProps, this.props) === false) return;\n      var axis = this.props.getAxis(); // Plot Bands cannot be updated, we have to remove and re-add\n\n      var opts = this.getPlotBandConfig();\n      axis.removePlotBand(opts.id);\n      axis.addPlotBand(opts);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var axis = this.props.getAxis();\n      attempt(axis.removePlotBand, this.id);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var children = this.props.children;\n      if (!children || !this.state.rendered) return null;\n      var bandChildren = Children.map(children, function (child) {\n        if (isValidElement(child) === false) return child;\n        return cloneElement(child, {\n          id: _this2.id\n        });\n      });\n      return React.createElement(Hidden, null, bandChildren);\n    }\n  }]);\n\n  return PlotBand;\n}(Component);\n\nPlotBand.defaultProps = {\n  id: uuid\n};\nexport default PlotBand;","map":null,"metadata":{},"sourceType":"module"}