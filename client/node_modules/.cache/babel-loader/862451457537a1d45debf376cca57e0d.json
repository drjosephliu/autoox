{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport pickBy from 'lodash-es/pickBy';\nimport attempt from 'lodash-es/attempt';\nimport find from 'lodash-es/find';\nimport getModifiedProps from '../../utils/getModifiedProps';\n\nvar PlotBandLabel = function (_Component) {\n  _inherits(PlotBandLabel, _Component);\n\n  function PlotBandLabel() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, PlotBandLabel);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PlotBandLabel.__proto__ || _Object$getPrototypeOf(PlotBandLabel)).call.apply(_ref, [this].concat(args))), _this), _this.getLabelProps = function (props) {\n      return pickBy(props, function (value, propName) {\n        return PlotBandLabel.labelProps.indexOf(propName) > -1;\n      });\n    }, _this.updatePlotBandLabel = function (config) {\n      var _this$props = _this.props,\n          id = _this$props.id,\n          getAxis = _this$props.getAxis;\n      var axis = getAxis();\n      window.setTimeout(function () {\n        var plotBand = axis.object && find(axis.object.plotLinesAndBands, function (band) {\n          return band.id === id;\n        });\n\n        if (plotBand) {\n          plotBand.options.label = _this.getLabelProps(config);\n          plotBand.render();\n        }\n      }, 1);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(PlotBandLabel, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          text = _props.children,\n          rest = _objectWithoutProperties(_props, ['children']);\n\n      this.updatePlotBandLabel(_extends({\n        text: text\n      }, rest));\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      if (getModifiedProps(prevProps, this.props, true) === false) return;\n\n      var _props2 = this.props,\n          text = _props2.children,\n          rest = _objectWithoutProperties(_props2, ['children']);\n\n      this.updatePlotBandLabel(_extends({\n        text: text\n      }, rest));\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var _props3 = this.props,\n          children = _props3.children,\n          rest = _objectWithoutProperties(_props3, ['children']);\n\n      attempt(this.updatePlotBandLabel, _extends({\n        text: null\n      }, rest));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return PlotBandLabel;\n}(Component);\n\nPlotBandLabel.labelProps = ['text', 'align', 'rotation', 'style', 'textAlign', 'useHTML', 'verticalAlign', 'x', 'y'];\nexport default PlotBandLabel;","map":null,"metadata":{},"sourceType":"module"}