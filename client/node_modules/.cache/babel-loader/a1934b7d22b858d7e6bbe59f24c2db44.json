{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport attempt from 'lodash-es/attempt';\nimport getModifiedProps from '../../utils/getModifiedProps';\n\nvar Pane = function (_Component) {\n  _inherits(Pane, _Component);\n\n  function Pane() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Pane);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Pane.__proto__ || _Object$getPrototypeOf(Pane)).call.apply(_ref, [this].concat(args))), _this), _this.updatePane = function (config) {\n      var chart = _this.props.getChart();\n\n      chart.update({\n        pane: config\n      }, true);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Pane, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          children = _props.children,\n          rest = _objectWithoutProperties(_props, ['children']);\n\n      this.updatePane(_extends({}, rest));\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var modifiedProps = getModifiedProps(prevProps, this.props);\n\n      if (modifiedProps !== false) {\n        this.updatePane(modifiedProps);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      attempt(this.updatePane, {});\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return Pane;\n}(Component);\n\nPane.defaultProps = {\n  children: null\n};\nexport default Pane;","map":null,"metadata":{},"sourceType":"module"}