{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport attempt from 'lodash-es/attempt';\nimport getModifiedProps from '../../utils/getModifiedProps';\n\nvar Tooltip = function (_Component) {\n  _inherits(Tooltip, _Component);\n\n  function Tooltip() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Tooltip);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Tooltip.__proto__ || _Object$getPrototypeOf(Tooltip)).call.apply(_ref, [this].concat(args))), _this), _this.updateTooltip = function (config) {\n      var chart = _this.props.getChart();\n\n      chart.update({\n        tooltip: config\n      }, true);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Tooltip, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          children = _props.children,\n          getHighcharts = _props.getHighcharts,\n          getChart = _props.getChart,\n          rest = _objectWithoutProperties(_props, ['children', 'getHighcharts', 'getChart']);\n\n      var Highcharts = getHighcharts();\n      var chartObj = getChart().object;\n      chartObj.tooltip = new Highcharts.Tooltip(chartObj, _extends({}, Highcharts.defaultOptions && Highcharts.defaultOptions.tooltip, rest));\n      this.updateTooltip(rest);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var modifiedProps = getModifiedProps(prevProps, this.props);\n\n      if (modifiedProps !== false) {\n        this.updateTooltip(modifiedProps);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      attempt(this.updateTooltip, {\n        enabled: false\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return Tooltip;\n}(Component);\n\nTooltip.defaultProps = {\n  children: null,\n  enabled: true\n};\nexport default Tooltip;","map":null,"metadata":{},"sourceType":"module"}