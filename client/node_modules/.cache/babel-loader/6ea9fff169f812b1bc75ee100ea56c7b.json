{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport attempt from 'lodash-es/attempt';\nimport getModifiedProps from '../../utils/getModifiedProps';\n\nvar Loading = function (_Component) {\n  _inherits(Loading, _Component);\n\n  function Loading() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Loading);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loading.__proto__ || _Object$getPrototypeOf(Loading)).call.apply(_ref, [this].concat(args))), _this), _this.updateLoading = function (config) {\n      var chart = _this.props.getChart();\n\n      chart.update({\n        loading: config\n      }, true);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Loading, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          children = _props.children,\n          isLoading = _props.isLoading,\n          getChart = _props.getChart,\n          rest = _objectWithoutProperties(_props, ['children', 'isLoading', 'getChart']);\n\n      this.updateLoading(rest);\n\n      if (isLoading) {\n        var chart = getChart();\n        chart.showLoading(children);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var _props2 = this.props,\n          children = _props2.children,\n          isLoading = _props2.isLoading,\n          getChart = _props2.getChart,\n          rest = _objectWithoutProperties(_props2, ['children', 'isLoading', 'getChart']);\n\n      var modifiedProps = getModifiedProps(prevProps, rest);\n\n      if (modifiedProps !== false) {\n        this.updateLoading(modifiedProps);\n      }\n\n      if (isLoading !== prevProps.isLoading) {\n        var chart = getChart();\n        if (isLoading) chart.showLoading(children);\n        if (!isLoading) chart.hideLoading();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var chart = this.props.getChart();\n      attempt(chart.hideLoading);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return Loading;\n}(Component);\n\nLoading.defaultProps = {\n  isLoading: true\n};\nexport default Loading;","map":null,"metadata":{},"sourceType":"module"}