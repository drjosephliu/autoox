{"ast":null,"code":"import _classCallCheck from \"/Users/Joseph/workspace/hackathons/autoox/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Joseph/workspace/hackathons/autoox/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Joseph/workspace/hackathons/autoox/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Joseph/workspace/hackathons/autoox/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Joseph/workspace/hackathons/autoox/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Joseph/workspace/hackathons/autoox/client/src/App.js\";\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport ReactHighCharts from 'react-highcharts';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.createConnection = function () {\n      _this.socket = io(_this.state.endpoint);\n\n      _this.socket.on('data', function (data) {\n        _this.addData(data); // let chart = this.refs.chart.getChart();\n        // chart.series[0].addPoint(data);\n\n      });\n    };\n\n    _this.addData = function (data) {\n      data = parseInt(data.slice(0, -1));\n\n      var newPulseOx = _this.state.pulseOx.concat(data);\n\n      if (_this.state.pulseOx.length > 30) {\n        newPulseOx = newPulseOx.slice(-30);\n      }\n\n      _this.setState({\n        pulseOx: newPulseOx\n      });\n    };\n\n    _this.state = {\n      endpoint: \"http://localhost:5000\",\n      pulseOx: []\n    };\n\n    _this.createConnection();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var pulseOx = this.state.pulseOx;\n      console.log(pulseOx);\n      var config = {\n        chart: {\n          type: 'line',\n          height: '400px'\n        },\n        xAxis: {\n          categories: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n        },\n        yAxis: {\n          title: {\n            text: \"Oxygen saturation\"\n          }\n        },\n        series: [{\n          data: pulseOx\n        }],\n        plotOptions: {\n          series: {\n            animation: {\n              duration: 500\n            }\n          }\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Current pulse oximetry readings: \", pulseOx.length == 0 ? 0 : pulseOx[pulseOx.length - 1], \"%\"), React.createElement(\"div\", {\n        style: {\n          border: 'solid 2px red',\n          padding: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(ReactHighCharts, {\n        config: config,\n        ref: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Joseph/workspace/hackathons/autoox/client/src/App.js"],"names":["React","Component","io","ReactHighCharts","App","createConnection","socket","state","endpoint","on","data","addData","parseInt","slice","newPulseOx","pulseOx","concat","length","setState","console","log","config","chart","type","height","xAxis","categories","yAxis","title","text","series","plotOptions","animation","duration","border","padding"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,eAAP,MAA4B,kBAA5B;;IAEMC,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;;AADY,UAWdC,gBAXc,GAWK,YAAM;AACvB,YAAKC,MAAL,GAAcJ,EAAE,CAAC,MAAKK,KAAL,CAAWC,QAAZ,CAAhB;;AAEA,YAAKF,MAAL,CAAYG,EAAZ,CAAe,MAAf,EAAuB,UAAAC,IAAI,EAAI;AAC7B,cAAKC,OAAL,CAAaD,IAAb,EAD6B,CAE7B;AACA;;AACD,OAJD;AAKD,KAnBa;;AAAA,UAqBdC,OArBc,GAqBJ,UAAAD,IAAI,EAAI;AAChBA,MAAAA,IAAI,GAAGE,QAAQ,CAACF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAD,CAAf;;AACA,UAAIC,UAAU,GAAG,MAAKP,KAAL,CAAWQ,OAAX,CAAmBC,MAAnB,CAA0BN,IAA1B,CAAjB;;AAEA,UAAI,MAAKH,KAAL,CAAWQ,OAAX,CAAmBE,MAAnB,GAA4B,EAAhC,EAAoC;AAClCH,QAAAA,UAAU,GAAGA,UAAU,CAACD,KAAX,CAAiB,CAAC,EAAlB,CAAb;AACD;;AAED,YAAKK,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAED;AAAX,OAAd;AACD,KA9Ba;;AAGZ,UAAKP,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,uBADC;AAEXO,MAAAA,OAAO,EAAE;AAFE,KAAb;;AAKA,UAAKV,gBAAL;;AARY;AASb;;;;6BAuBQ;AAAA,UACCU,OADD,GACa,KAAKR,KADlB,CACCQ,OADD;AAEPI,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,UAAMM,MAAM,GAAG;AACbC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,MADD;AAELC,UAAAA,MAAM,EAAE;AAFH,SADM;AAKbC,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B;AADP,SALM;AAQbC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD;AADF,SARM;AAabC,QAAAA,MAAM,EAAE,CAAC;AACPpB,UAAAA,IAAI,EAAEK;AADC,SAAD,CAbK;AAgBbgB,QAAAA,WAAW,EAAE;AACXD,UAAAA,MAAM,EAAE;AACNE,YAAAA,SAAS,EAAE;AACTC,cAAAA,QAAQ,EAAE;AADD;AADL;AADG;AAhBA,OAAf;AAyBA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAsClB,OAAO,CAACE,MAAR,IAAkB,CAAlB,GAAsB,CAAtB,GAA0BF,OAAO,CAACA,OAAO,CAACE,MAAR,GAAe,CAAhB,CAAvE,MADF,EAEE;AAAK,QAAA,KAAK,EAAE;AAAEiB,UAAAA,MAAM,EAAE,eAAV;AAA2BC,UAAAA,OAAO,EAAE;AAApC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,MAAM,EAAEd,MAAzB;AAAiC,QAAA,GAAG,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CADF;AAQD;;;;EArEepB,S;;AAwElB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport ReactHighCharts from 'react-highcharts';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      endpoint: \"http://localhost:5000\",\n      pulseOx: []\n    };\n\n    this.createConnection();\n  }\n\n  createConnection = () => {\n    this.socket = io(this.state.endpoint);\n\n    this.socket.on('data', data => {\n      this.addData(data);\n      // let chart = this.refs.chart.getChart();\n      // chart.series[0].addPoint(data);\n    });\n  }\n\n  addData = data => {\n    data = parseInt(data.slice(0, -1));\n    let newPulseOx = this.state.pulseOx.concat(data);\n\n    if (this.state.pulseOx.length > 30) {\n      newPulseOx = newPulseOx.slice(-30);\n    }\n\n    this.setState({ pulseOx: newPulseOx });\n  }\n\n  render() {\n    const { pulseOx } = this.state;\n    console.log(pulseOx);\n    const config = {\n      chart: {\n        type: 'line',\n        height: '400px'\n      },\n      xAxis: {\n        categories: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n      },\n      yAxis: {\n        title: {\n          text: \"Oxygen saturation\"\n        }\n      },\n      series: [{\n        data: pulseOx\n      }],\n      plotOptions: {\n        series: {\n          animation: {\n            duration: 500\n          }\n        }\n      }\n    };\n\n    return (\n      <div>\n        <h1>Current pulse oximetry readings: {pulseOx.length == 0 ? 0 : pulseOx[pulseOx.length-1]}%</h1>\n        <div style={{ border: 'solid 2px red', padding: '0px' }}>\n          <ReactHighCharts config={config} ref='chart'></ReactHighCharts>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}